definitions:
  errs.ErrorModel:
    properties:
      message:
        type: string
      text:
        type: string
      xmlname:
        type: string
    type: object
  passport.ExpirationModel:
    properties:
      daysUntilExpiration:
        type: string
      status:
        type: string
    type: object
  passport.HeaderModel:
    properties:
      CHANGEDATE:
        type: string
      Sequence:
        type: string
      currentWay:
        type: string
      currentWayID:
        type: string
      echName:
        type: string
      echkName:
        type: string
      initialKM:
        type: string
      initialM:
        type: string
      initialMeter:
        type: string
      initialPK:
        type: string
      locationId:
        type: string
      plotLength:
        type: string
      sectionId:
        type: string
      sectionName:
        type: string
      siteId:
        type: string
      suspensionAmount:
        type: string
      text:
        type: string
      wayAmount:
        type: string
      workType:
        type: string
    type: object
  passport.Model:
    properties:
      Expiration:
        $ref: '#/definitions/passport.ExpirationModel'
        type: object
      Header:
        $ref: '#/definitions/passport.HeaderModel'
        type: object
      Towers:
        $ref: '#/definitions/passport.TowersModel'
        type: object
      id:
        type: string
      text:
        type: string
      xmlname:
        type: string
    type: object
  passport.TowerModel:
    properties:
      CountWire:
        type: string
      Gabarit:
        type: string
      RADIUS:
        type: string
      SPEED:
        type: string
      TF_TYPE:
        type: string
      TURN:
        type: string
      WireType:
        type: string
      assetNum:
        type: string
      catenary:
        type: string
      distance:
        type: string
      grounded:
        type: string
      height:
        type: string
      idtf:
        type: string
      km:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      mapper:
        type: string
      number:
        type: string
      offset:
        type: string
      pk:
        type: string
      stopSeq:
        type: string
      suspensionType:
        type: string
      text:
        type: string
      zigzag:
        type: string
    type: object
  passport.TowersModel:
    properties:
      TowerModel:
        items:
          $ref: '#/definitions/passport.TowerModel'
        type: array
      sectionID:
        type: string
      text:
        type: string
    type: object
host: localhost:80
info:
  contact: {}
  description: Store server for passports and routes.
  license: {}
  title: Passports and Routes of railways store server
  version: "1.0"
paths:
  /:passportId:
    get:
      description: return passport by ID from database if there is one, or return
        error object with status code 200
      responses:
        "200":
          description: if there is not passport with the ID
          schema:
            $ref: '#/definitions/errs.ErrorModel'
      summary: GetPassportByID
      tags:
      - passports
  /:passportId/towers:
    get:
      description: return all towers of passport by id
      responses:
        "200":
          description: if there is not passport with ID
          schema:
            $ref: '#/definitions/errs.ErrorModel'
      summary: GetTowersOfPassport
      tags:
      - towers
  /:passportId/towers/:towerId:
    get:
      description: return certain tower of the passport by ID
      responses:
        "200":
          description: if there is not passport or tower with ID
          schema:
            $ref: '#/definitions/errs.ErrorModel'
      summary: GetPassportTowerByID
      tags:
      - towers
  /:passportId/towers/findtower:
    get:
      description: return the closest tower belonged the passport by coordinates
      parameters:
      - description: latitude
        in: query
        name: latitude
        required: true
        type: number
      - description: longitude
        in: query
        name: longitude
        required: true
        type: number
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/errs.ErrorModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ErrorModel'
      summary: FindTowerByCoordinate
      tags:
      - towers
swagger: "2.0"
